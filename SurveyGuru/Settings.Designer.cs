
using Microsoft.VisualBasic;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------




[System.Runtime.CompilerServices.CompilerGeneratedAttribute(), System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "9.0.0.0"), System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
internal sealed partial class MySettings : global::System.Configuration.ApplicationSettingsBase
{

	private static MySettings defaultInstance = (MySettings)global::System.Configuration.ApplicationSettingsBase.Synchronized(new MySettings());

	#region "My.Settings Auto-Save Functionality"
	#if _MyType = "WindowsForms"

	private static bool addedHandler;

	private static object addedHandlerLockObject = new object();
	[System.Diagnostics.DebuggerNonUserCodeAttribute(), System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
	private static void AutoSaveSettings(global::System.Object sender, global::System.EventArgs e)
	{
		if (My.Application.SaveMySettingsOnExit) {
			My.Settings.Save();
		}
	}
	#endif
	#endregion

	public static MySettings Default {
		get {

			#if _MyType = "WindowsForms"
			if (!addedHandler) {
				lock (addedHandlerLockObject) {
					if (!addedHandler) {
						My.Application.Shutdown += AutoSaveSettings;
						addedHandler = true;
					}
				}
			}
			#endif
			return defaultInstance;
		}
	}
}

namespace My
{

	[Microsoft.VisualBasic.HideModuleNameAttribute(), System.Diagnostics.DebuggerNonUserCodeAttribute(), System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
	static internal class MySettingsProperty
	{

		[System.ComponentModel.Design.HelpKeywordAttribute("My.Settings")]
		static internal global::BeaconBase.MySettings Settings {
			get { return global::BeaconBase.MySettings.Default; }
		}
	}
}

//=======================================================
//Service provided by Telerik (www.telerik.com)
//Conversion powered by NRefactory.
//Twitter: @telerik
//Facebook: facebook.com/telerik
//=======================================================
